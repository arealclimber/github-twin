services:
  mongo1:
    image: mongo:5
    container_name: github-twin-mongo1
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30001"]
    volumes:
      - mongo-replica-1-data:/data/db
    ports:
      - "30001:30001"
    healthcheck:
      test: test $$(echo "rs.status().ok || rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:30001\"},{_id:1,host:\"mongo2:30002\"},{_id:2,host:\"mongo3:30003\"}]}).ok" | mongo --port 30001 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    restart: always

  mongo2:
    image: mongo:5
    container_name: github-twin-mongo2
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30002"]
    volumes:
      - mongo-replica-2-data:/data/db
    ports:
      - "30002:30002"
    restart: always

  mongo3:
    image: mongo:5
    container_name: github-twin-mongo3
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "30003"]
    volumes:
      - mongo-replica-3-data:/data/db
    ports:
      - "30003:30003"
    restart: always

  mq:
    image: rabbitmq:3-management-alpine
    container_name: github-twin-mq
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - ~/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/rabbitmq/log/:/var/log/rabbitmq
    restart: always

  cdc:
    image: "github-twin-cdc"
    container_name: github-twin-cdc
    build:
      context: .
      dockerfile: .docker/Dockerfile.cdc
    env_file:
      - .env
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - mq

volumes:
  mongo-replica-1-data:
  mongo-replica-2-data:
  mongo-replica-3-data:
  qdrant-data:
